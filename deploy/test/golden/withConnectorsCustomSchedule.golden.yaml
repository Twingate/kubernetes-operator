---
# Source: twingate-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-twingate-operator
  namespace: default
  labels:
    helm.sh/chart: twingate-operator-major.minor.patch-test
    app.kubernetes.io/name: twingate-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: twingate-operator/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-twingate-operator
  namespace: default
  labels:
    helm.sh/chart: twingate-operator-major.minor.patch-test
    app.kubernetes.io/name: twingate-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
data:
  TWINGATE_API_KEY: PGFwaSBrZXk+
---
# Source: twingate-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test-twingate-operator-role-cluster
rules:
  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]
  - apiGroups: ["", "events.k8s.io"]
    resources: [events]
    verbs: ['*']

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]

  # Application
  - apiGroups: [twingate.com]
    resources: ["*"]
    verbs: [ "*" ]

  - apiGroups: ["*"]
    resources: [pods, services, secrets, services/status]
    verbs: [list, watch, patch, get, create, delete]

  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: twingate-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-twingate-operator-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-twingate-operator-role-cluster
subjects:
  - kind: ServiceAccount
    name: test-twingate-operator
    namespace: default
---
# Source: twingate-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-twingate-operator
  namespace: default
  labels:
    helm.sh/chart: twingate-operator-major.minor.patch-test
    app.kubernetes.io/name: twingate-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: twingate-operator
      app.kubernetes.io/instance: test
  template:
    metadata:
      labels:
        app.kubernetes.io/name: twingate-operator
        app.kubernetes.io/instance: test
    spec:
      serviceAccountName: test-twingate-operator
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: twingate-operator
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
        image: "twingate/kubernetes-operator:latest"
        imagePullPolicy: IfNotPresent
        command:
          - kopf
          - run
          - ./main.py
          - "-A"
          - "--standalone"
          - "--liveness=http://0.0.0.0:8080/healthz"
          - "--log-format=full"
        env:
          - name: TWINGATE_API_KEY
            valueFrom:
              secretKeyRef:
                name: test-twingate-operator
                key: TWINGATE_API_KEY
          - name: TWINGATE_NETWORK
            value: <network slug>
          - name: TWINGATE_HOST
            value: twingate.com
          - name: TWINGATE_DEFAULT_RESOURCE_TAGS
            value: "{}"
          - name: TWINGATE_REMOTE_NETWORK_ID
            value: <remote network id>
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
        resources:
            {}
---
# Source: twingate-operator/templates/connectors.yaml
apiVersion: twingate.com/v1beta
kind: TwingateConnector
metadata:
  name: my-connector-0
spec:
  name: my-connector-0
  imagePolicy:
    schedule: "0 0 * * *"
  containerExtra:
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 314m
        memory: 128Mi
  podAnnotations:
    some/annotation: some-value
---
# Source: twingate-operator/templates/connectors.yaml
apiVersion: twingate.com/v1beta
kind: TwingateConnector
metadata:
  name: my-connector-2
spec:
  name: my-connector-2
  imagePolicy:
    schedule: "2 0 * * *"
  containerExtra:
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 314m
        memory: 128Mi
  podAnnotations:
    some/annotation: some-value
---
# Source: twingate-operator/templates/connectors.yaml
apiVersion: twingate.com/v1beta
kind: TwingateConnector
metadata:
  name: my-connector-4
spec:
  name: my-connector-4
  imagePolicy:
    schedule: "4 0 * * *"
  containerExtra:
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 314m
        memory: 128Mi
  podAnnotations:
    some/annotation: some-value
---
# Source: twingate-operator/templates/connectors.yaml
apiVersion: twingate.com/v1beta
kind: TwingateConnector
metadata:
  name: my-connector-6
spec:
  name: my-connector-6
  imagePolicy:
    schedule: "6 0 * * *"
  containerExtra:
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 314m
        memory: 128Mi
  podAnnotations:
    some/annotation: some-value
